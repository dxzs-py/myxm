# Generated by Django 5.2 on 2025-09-09 15:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0003_province_city_province'),
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_show', models.BooleanField(default=True, verbose_name='是否显示')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('crop_class', models.CharField(max_length=64, verbose_name='作物类别')),
                ('crop_img', models.ImageField(blank=True, null=True, upload_to='crop_img', verbose_name='作物图片')),
            ],
            options={
                'verbose_name': '作物',
                'verbose_name_plural': '作物',
                'db_table': 'xm_crop',
            },
        ),
        migrations.CreateModel(
            name='Growth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_show', models.BooleanField(default=True, verbose_name='是否显示')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('growth_cycle', models.CharField(blank=True, max_length=64, null=True, verbose_name='成长周期')),
                ('begin_time_month', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True, verbose_name='开始日期的月份')),
                ('begin_time_day', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)], null=True, verbose_name='开始日期的日号')),
                ('end_time_month', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True, verbose_name='结束日期的月份')),
                ('end_time_day', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)], null=True, verbose_name='结束日期的日号')),
                ('measures_precautions', models.TextField(blank=True, null=True, verbose_name='关键管理措施/注意事项')),
                ('disasters', models.TextField(blank=True, null=True, verbose_name='可能受到的灾难')),
                ('growth_temp', models.FloatField(blank=True, null=True, verbose_name='最短适宜温度(℃)')),
                ('growth_temp_min', models.FloatField(blank=True, null=True, verbose_name='适宜最低温度(℃)')),
                ('growth_temp_max', models.FloatField(blank=True, null=True, verbose_name='适宜最高温度(℃)')),
                ('growth_humidity_min', models.FloatField(blank=True, null=True, verbose_name='适宜最低湿度(%)')),
                ('growth_humidity_max', models.FloatField(blank=True, null=True, verbose_name='适宜最高湿度(%)')),
                ('growth_rainfall_min', models.FloatField(blank=True, null=True, verbose_name='适宜最低降雨量(mm)')),
                ('growth_rainfall_max', models.FloatField(blank=True, null=True, verbose_name='适宜最高降雨量(mm)')),
                ('growth_wind_min', models.FloatField(blank=True, null=True, verbose_name='适宜最低风速(m/s)')),
                ('growth_wind_max', models.FloatField(blank=True, null=True, verbose_name='适宜最高风速(m/s)')),
                ('sunshine_hours_min', models.FloatField(blank=True, null=True, verbose_name='最短日照时长(h)')),
                ('sunshine_hours_max', models.FloatField(blank=True, null=True, verbose_name='最长日照时长(h)')),
                ('cycle_order', models.PositiveSmallIntegerField(blank=True, help_text='用于标识生长阶段的先后顺序', null=True, verbose_name='生长顺序')),
                ('duration_days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='大致持续天数')),
                ('is_critical', models.BooleanField(default=False, help_text='此时期对环境条件敏感，需特别关注', verbose_name='关键物候期')),
                ('phenophase_code', models.CharField(blank=True, help_text='可参照农业标准物候期编码', max_length=20, null=True, verbose_name='物候期编码')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_growth', to='crop.crop', verbose_name='作物')),
            ],
            options={
                'verbose_name': '该生长周期的作物适宜条件',
                'verbose_name_plural': '该生长周期的作物适宜条件',
                'db_table': 'xm_crop_growth',
                'ordering': ['crop', 'cycle_order'],
            },
        ),
        migrations.CreateModel(
            name='PlantArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_show', models.BooleanField(default=True, verbose_name='是否显示')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
                ('including_areas', models.CharField(default='', max_length=64, verbose_name='包含的种植区域')),
                ('longitude', models.FloatField(verbose_name='经度')),
                ('latitude', models.FloatField(verbose_name='纬度')),
                ('area', models.FloatField(verbose_name='面积(万亩)')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='city_plant', to='user.city', verbose_name='城市')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_plant', to='crop.crop', verbose_name='种植作物')),
            ],
            options={
                'verbose_name': '种植区',
                'verbose_name_plural': '种植区',
                'db_table': 'xm_plant_area',
                'unique_together': {('crop', 'city', 'longitude', 'latitude')},
            },
        ),
    ]
